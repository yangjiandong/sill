extjs
========

2011.02.07
-----------

1. layout
p165

7_form_panel.php,
formPanel:
loadMovieForm:
movieForm.getForm().loadRecord(rec);
//直接装载可编辑记录,

required label
http://wtcindia.wordpress.com/2009/10/20/adding-a-red-asterisk-to-the-required-form-fields/
chapter7/o.js
7_form_panel.php

tree 章节现在看了也会忘得,还不如多练习

p210 Windows and Dialogs
--可在html中采用extjs,不一定都采用extjs

--sencha 首页图标效果
Chapter9/index.html

chart
--第十章chart功能,简单浏览
--采用了flash,效果还行

p258 第十一章,效果

p298 扩展extjs

2011.02.06
-----------

1. textfield search
listeners: specialkey
p107

2. toolbars in panels
tbar: above the panel's body
bbar: below the panel's body
fbar: placed into the panel's footr element.

3. combining two columns
--方便计算列
function title_tagline..

p126

4. advaanced grid formatting
p137
--这个例子比较全面,有窗口提示功能等等,Chapter5/9_advanced_grid_manipulation.php
--感觉模板很有用,tpl

5. editor grid
--单击编辑
clicksToEdit:1

p150

2011.02.05
-----------

1. about toolbar alignment,dividers,and spacers
p101
shortcuts for coding faster.
->
- or separator
''
p106

2011.02.04
-----------

1. p99

2011.02.03
-----------

1. form.submit 参数说明
p87

menu
p93

2011.02.01
-----------

1. p74
--自定义验证
Ext.form.VTypes.nameVal
               .nameMask
               .nameText

..
vtype:'name'

2011.01.30
-----------

1. Learing.Ext.js.3.2.0
p59
my_id,
Bear in mind that DOM element IDs must be unique,So once we have used my_id,...

p60
use our own HTML:
contentEl: 'div-id' or
items: new Ext.BoxComponent({
el: 'div-id'})

2011.01.25
-----------

1. extj ajax 同步扩展包 http://code.google.com/p/ext-basex/ 
   ./basex42JITbeta.zip   

2011.01.17
-----------

1. extjs 回调函数callback
   
   ajax 的异步请求有时候会带来延时加载,load方法中提供了一个callback回调函数，
   可以解决延迟加载的问题，我们需要处理的一部分代码可以放在callback函数中处理，
   这样就解决了异步请求带来的问题

collectIndex_ds.load({
  callback :function(r,options,success){
    if(success){
     ...
    }
  }
})

2011.01.16
-----------

1. ext 项目暂定规则

命名空间: Ext.app,Ext.app.ux
文件目录: app
             app.module1(dir)
             app.module2(dir)
             app.utils.js
             about.js
             login.js
             main.js
          app.ux

2011.01.14
-----------

1. Ext异步请求session过期解决方案
http://lym6520.javaeye.com/blog/871092

文章分类:Web前端
    最近在开发后台管理系统，前台使用了Ext框架，在开发过程中，发现session过期时客服端仍然不断的进行了N次请求后才停止，
    我想很多使用过Ext框架开发的同学都遇到过同样的问题吧！今天我就来说说我的解决方案吧！

    前端通过Ext.Ajax.request的requestcomplete事件来进行session过期验证处理的：
// Default headers to pass in every request
  Ext.Ajax.defaultHeaders = {
      'Request-By': 'Ext'	//标识ajax请求
  };

  // ajax回调函数处理系统退出
  Ext.Ajax.on('requestcomplete',checkSessionStatus, this);
  function checkSessionStatus(conn,response,options){
      var json = Ext.decode(response.responseText);
      if(typeof json == 'object'
      && !json.success
      && json.timeout){
      alert("登入超时,系统将自动跳转到登陆页面,请重新登入!");
      top.window.location.href = json.redirectUri;
    }

  }


从上面的js代码中，注意下面这行代码：
// Default headers to pass in every request
  Ext.Ajax.defaultHeaders = {
      'Request-By': 'Ext'	//标识ajax请求
  };



需要设置请求的头信息来标识ajax请求，过滤器在处理请求的时候就是通过请求的头信息Request-By值是否为Ext来判断是否为Ext的异步请求的，
然后在做出不同的响应。

最后看看过滤器的处理方式，以下是session超时处理的部分的代码：
String ajaxTag = req.getHeader("Request-By");//Ext

      if(ajaxTag == null || !ajaxTag.trim().equalsIgnoreCase("Ext")){
        resp.sendRedirect(this.redirectUri);
      }else{
        resp.addHeader("sessionstatus", "timeout");
        Map<String, Object> result = new HashMap<String, Object>();
        result.put("success", false);
        result.put("timeout",true);
        result.put("redirectUri", this.redirectUri);
        PrintWriter out = resp.getWriter();
        out.print(Json.object2Json(result));
        out.flush();
        out.close();
      }



通过判断是否为Ext的异步请求，来做出不同的动作处理：直接跳转到登入页面或输出session过期信息由前台js事件拦截处理。

old
-----------

1. layout

   采用最简单布局

   ext/examples/layout-browser


   --end

