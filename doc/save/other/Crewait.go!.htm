<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0042)http://jonah.org/articles/crewait_go_.html -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		
		<link rel="shortcut icon" href="http://jonah.org/favicon.ico" type="image/x-icon">
		<title>Crewait.go!</title>
		<script type="text/javascript">
		var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
		document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
		</script><script src="./Crewait.go!_files/ga.js" type="text/javascript"></script>
		<script type="text/javascript">
		try {
		var pageTracker = _gat._getTracker("UA-8480724-5");
		pageTracker._trackPageview();
		} catch(err) {}</script>
		<link href="./Crewait.go!_files/my_style.css" media="screen" rel="stylesheet" type="text/css">
		<!--[if IE 6]><link rel="stylesheet" type="text/css" href="/stylesheets/ie6.css"><![endif]-->
		<!--[if IE 7]><link rel="stylesheet" type="text/css" href="/stylesheets/ie7.css"><![endif]-->
	</head>
	<body>
		<div id="wrap">
			<div id="header">
				<a href="http://jonah.org/">jonah.org</a>
			</div>

			<p style="color: green"></p>
			<div id="main">
				<div class="post">
  <h2>Crewait.go!</h2>
	<div class="underdone">&nbsp;</div>
  <div class="date">28 December 2009</div>
  <div>
    <p>This post is for anyone who uses ActiveRecord, whether in Rails or elsewhere. It's an introduction to the crewait gem, which aims to make bulk insertion of data fast while using the familiar ActiveRecord API.</p>
<p>Say you want to insert a lot of data into some tables using ActiveRecord. Here's a very simple example:</p>
<pre class="code"><span class="source source_ruby source_ruby_rails"><span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>upto <span class="constant constant_numeric constant_numeric_ruby">1_000_000</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">index</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
  <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>create<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> <span class="string string_quoted string_quoted_double string_quoted_double_ruby"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_ruby">"</span>Product #<span class="source source_ruby source_ruby_embedded source_ruby_embedded_source"><span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">#{</span>index<span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">}</span></span><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_ruby">"</span></span><span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="keyword keyword_control keyword_control_ruby">end</span></span></pre>
<p>I fired up a fresh app, added a Product model, and even without validations and such, this takes 1 hour, 11 minutes and 40 seconds to run â€” too slow!</p>
<p>We perform these sort of bulk insertions frequently at the Almanac as part of data migrations, so we needed a faster solution. At first we tried ar-extensions:</p>
<pre class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>import<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span>
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">..</span><span class="constant constant_numeric constant_numeric_ruby">1_000_000</span><span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>to_a<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>map <span class="punctuation punctuation_section punctuation_section_scope punctuation_section_scope_ruby">{</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">index</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span> <span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="string string_quoted string_quoted_double string_quoted_double_ruby"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_ruby">"</span>Product #<span class="source source_ruby source_ruby_embedded source_ruby_embedded_source"><span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">#{</span>index<span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">}</span></span><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_ruby">"</span></span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_section punctuation_section_scope punctuation_section_scope_ruby">}</span><span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span></span></pre>
<p>This cut down the time somewhat, but still only to 41 minutes, 20 seconds; also, it has a less straight-forward API than straight-up ActiveRecord, which becomes an added difficulty in more complicated examples.</p>
<p>I wanted to maintain the feel of ActiveRecord's API while turning that Ruby code into as few SQL insert statements as possible. So:
</p><pre class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>start_waiting

<span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>upto <span class="constant constant_numeric constant_numeric_ruby">1_000_000</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">index</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
  <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>crewait<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> <span class="string string_quoted string_quoted_double string_quoted_double_ruby"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_ruby">"</span>Product #<span class="source source_ruby source_ruby_embedded source_ruby_embedded_source"><span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">#{</span>index<span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">}</span></span><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_ruby">"</span></span><span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="keyword keyword_control keyword_control_ruby">end</span>

<span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>go!</span></pre>
<p>Total time? 9 minutes, 32 seconds. As for the code, <code class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>start_waiting</span></code> creates a "waiting area" hash, <code class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>crewait</span></code> sends data to that waiting area, and then <code class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>go!</span></code> sends the data in the waiting area off to their different tables in the minimal number of INSERT statements, without creating any ActiveRecord objects at all.</p>
<p>But what if you need use your product objects once you've created them?</p>
<p>For instance, suppose you've been given a csv where each row is a transaction performed at a store, where the first column is the name of the product purchased and the second is the quantity purchased. You've got a belongs_to/has_many going on between transactions and products, and your code might go something like this:</p>
<pre class="code"><span class="source source_ruby">product_hash <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> <span class="punctuation punctuation_section punctuation_section_scope punctuation_section_scope_ruby">{}</span>

<span class="support support_class support_class_ruby">FasterCSV</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>foreach<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>csv_path<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">row</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
<span class="comment comment_line comment_line_number-sign comment_line_number-sign_ruby">  <span class="punctuation punctuation_definition punctuation_definition_comment punctuation_definition_comment_ruby">#</span> See if a product with this name has already been created, and
</span><span class="comment comment_line comment_line_number-sign comment_line_number-sign_ruby">  <span class="punctuation punctuation_definition punctuation_definition_comment punctuation_definition_comment_ruby">#</span> if not, create it; assign it to "product"
</span>  product <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> product_hash<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span>row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">0</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]]</span> <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_augmented keyword_operator_assignment_augmented_ruby">||=</span> <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>create<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">0</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span>
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span> 
  <span class="support support_class support_class_ruby">Transaction</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>create<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>product</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> product<span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>quantity</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>to_f
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="keyword keyword_control keyword_control_ruby">end</span></span></pre>
<p>With a dummy csv (200 products, 100,000 transactions), this takes 8 minutes, 41 seconds. We can do this with ar-extensions, supposing that you have a method that lets you pull the next_insert_id for the tables:</p>
<pre class="code"><span class="source source_ruby source_ruby_rails">product_hash <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> <span class="punctuation punctuation_section punctuation_section_scope punctuation_section_scope_ruby">{}</span>
transaction_array <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> <span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[]</span>

<span class="support support_class support_class_ruby">FasterCSV</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>foreach<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>csv_path<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">row</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
  product_id <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> product_hash<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[[</span>row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">0</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]]]</span> <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_augmented keyword_operator_assignment_augmented_ruby">||=</span> <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>next_insert_id \
    <span class="keyword keyword_operator keyword_operator_arithmetic keyword_operator_arithmetic_ruby">+</span> product_hash<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>length
  transaction_array <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_augmented keyword_operator_assignment_augmented_ruby">&lt;&lt;</span> <span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span>product_id<span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span> row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>to_f<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span>
<span class="keyword keyword_control keyword_control_ruby">end</span>

<span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>import<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span> product_hash<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>keys<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="support support_class support_class_ruby">Transaction</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>import<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>product_id</span><span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span> <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>quantity</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span> transaction_array<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span></span></pre>
<p>This is slightly faster, but still sort of slow (4 minutes 46 seconds) and once more has an unfamiliar API. Finally, we've got crewait:</p>
<pre class="code"><span class="source source_ruby"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>start_waiting

product_hash <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> <span class="punctuation punctuation_section punctuation_section_scope punctuation_section_scope_ruby">{}</span>

<span class="support support_class support_class_ruby">FasterCSV</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>foreach<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>csv_path<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">row</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
  product <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ruby">=</span> product_hash<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span>row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">0</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]]</span> <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_augmented keyword_operator_assignment_augmented_ruby">||=</span> <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>crewait<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">0</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span>
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>  
  <span class="support support_class support_class_ruby">Transaction</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>crewait<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>product_id</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> product<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>id<span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span> <span class="comment comment_line comment_line_number-sign comment_line_number-sign_ruby"><span class="punctuation punctuation_definition punctuation_definition_comment punctuation_definition_comment_ruby">#</span> notice
</span>    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>quantity</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> row<span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">[</span><span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_section punctuation_section_array punctuation_section_array_ruby">]</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>to_f
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="keyword keyword_control keyword_control_ruby">end</span>

<span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>go!</span></pre>
<p>This ran in a minute and 35 seconds. This is the same as the original code, except for the Crewait statements and the fact that we can't use the association sugar ActiveRecord gives â€” we have to write out <code class="code"><span class="source source_ruby source_ruby_rails">product<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>id</span></code>.</p><p>But <code class="code"><span class="source source_ruby source_ruby_rails">product<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>id</span></code> returns the "right" number, even though it's not a real ActiveRecord object (it's a Hash with some singleton methods), and even though it hasn't been saved yet; Crewait keeps score correctly, along as there's no other products created before you call <code class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>go!</span></code>. We can also call any of the attributes of Product â€” for instance, in this case, <code class="code"><span class="source source_ruby source_ruby_rails">product<span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>name</span></code>.</p>
<p>If you do want to initialize an ActiveRecord object (in order use a callback like before_validation to set the attributes properly, for example), but still want as few SQL INSERT statements as possible, you can do the following:</p>
<pre class="code"><span class="source source_ruby source_ruby_rails"><span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>start_waiting

<span class="constant constant_numeric constant_numeric_ruby">1</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>upto <span class="constant constant_numeric constant_numeric_ruby">1_000_000</span> <span class="keyword keyword_control keyword_control_start-block keyword_control_start-block_ruby">do </span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span><span class="variable variable_other variable_other_block variable_other_block_ruby">index</span><span class="punctuation punctuation_separator punctuation_separator_variable punctuation_separator_variable_ruby">|</span>
  <span class="support support_class support_class_ruby">Product</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>crewait<span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">(</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>name</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> <span class="string string_quoted string_quoted_double string_quoted_double_ruby"><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_begin punctuation_definition_string_begin_ruby">"</span>Product #<span class="source source_ruby source_ruby_embedded source_ruby_embedded_source"><span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">#{</span>index<span class="punctuation punctuation_section punctuation_section_embedded punctuation_section_embedded_ruby">}</span></span><span class="punctuation punctuation_definition punctuation_definition_string punctuation_definition_string_end punctuation_definition_string_end_ruby">"</span></span><span class="punctuation punctuation_separator punctuation_separator_object punctuation_separator_object_ruby">,</span>
    <span class="constant constant_other constant_other_symbol constant_other_symbol_ruby"><span class="punctuation punctuation_definition punctuation_definition_constant punctuation_definition_constant_ruby">:</span>stay_a_hash</span> <span class="punctuation punctuation_separator punctuation_separator_key-value">=&gt;</span> <span class="constant constant_language constant_language_ruby">false</span>
  <span class="punctuation punctuation_section punctuation_section_function punctuation_section_function_ruby">)</span>
<span class="keyword keyword_control keyword_control_ruby">end</span>

<span class="support support_class support_class_ruby">Crewait</span><span class="punctuation punctuation_separator punctuation_separator_method punctuation_separator_method_ruby">.</span>go!</span></pre>

<p>Finally, here's a table to summing up the speed improvements for the first example, on fresh app:</p>
<table>
  <tbody><tr>
    <th># of Records</th>
    <th>normal</th>	
    <th>ar-extensions</th>
    <th>crewait</th>		
  </tr>	
  <tr>
    <td>1</td>		
    <td>0.144</td>
    <td>0.22</td>
    <td>0.00208</td>			
  </tr>		
  <tr>
    <td>10</td>			
    <td>0.0517</td>
    <td>0.023</td>
    <td>0.00459</td>
  </tr>
  <tr>
    <td>100</td>
    <td>0.44</td>
    <td>0.283</td>
    <td>0.0358</td>
  </tr>		
  <tr>
    <td>1000</td>
    <td>4.48</td>
    <td>2.54</td>
    <td>0.442</td>
  </tr>
  <tr>
    <td>10000</td>
    <td>45.4</td>
    <td>22.5</td>			
    <td>4.3</td>			
  </tr>		
  <tr>
    <td>100000</td>
    <td>419.0</td>
    <td>226.0</td>
    <td>46.2</td>
  </tr>
  <tr>
    <td>1000000</td>			
    <td>4300.0</td>			
    <td>2480.0</td>
    <td>572.0</td>			
  </tr>
</tbody></table>
<p>This is a young gem (so far I've only used it with MySQL), so <code class="code"><span class="text text_plain"><span class="meta meta_paragraph meta_paragraph_text">gem install crewait</span></span></code>, or play with the code at <a href="http://github.com/theAlmanac/crewait">GitHub</a> so it can grow up! Happy New Year!</p>
  </div>
</div>


			</div>

			<div id="sidebar">
		    	<p>
					Jonah Bloch-Johnson's<br>
					place for Internet statements.
		    	</p>
			    <ul>
					<!---->
					<li><a href="http://thealmanacapp.com/">The Almanac</a></li>
					<li><a href="https://gothamenergyapp.com/">Gotham Energy App</a></li>
					--&gt;
					<li>E-mail <a href="mailto:me@jonah.org">me@jonah.org</a></li>
					<li>Check out <a href="http://jonah.org/archive">the archive</a></li>
					<!---->
					<li><a href="http://jonah.org/portfolio">a selected portfolio</a></li>
					--&gt;
					
			    </ul>
			</div>
			<div id="footer">
				<div id="archive">
					Check out <a href="http://jonah.org/archive">the archive</a>!
				</div>
				Â© 2011 Jonah Bloch-Johnson
			</div>
		</div>
	

</body></html>